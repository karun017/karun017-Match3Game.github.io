//ver.1
document.addEventListener('DOMContentLoaded', () => {
    const container = document.querySelector('.game-container'); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠ class
    const button = document.getElementById('shuffle-button');
    const emojis = ["üçë", "üçå", "ü•ù", "üçá", "üçì"];
    let selectedItem = null;
    let selectedEmoji = null;
    let clickedItem = null;
    let clickedEmoji = null;
    let isAnimating = false; // ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°
    function createRandomItem(row, col) {
        const item = document.createElement('div');
        item.classList.add('item', 'falling');
        item.dataset.emoji = emojis[Math.floor(Math.random() * emojis.length)];
        item.dataset.row = row;
        item.dataset.col = col;
        item.style.animationDelay = `${(7 - col) * 0.1}s`;
        return item;
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    function initializeGrid() {
        container.innerHTML = '';
        let grid = [];
        
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥
        for (let i = 0; i < 8; i++) {
            let row = [];
            for (let j = 0; j < 8; j++) {
                const item = createRandomItem(i, j);
                row.push(item);
            }
            grid.push(row);
        }

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡∏•‡∏á‡πÉ‡∏ô container
        for (let i = 0; i < 8; i++) {
            for (let j = 0; j < 8; j++) {
                container.appendChild(grid[i][j]);
            }
        }

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        ensureNoThreeInARow(grid);

        addEventListenersToItems(); // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á item
        addHoverListenersToItems(); // ‡πÄ‡∏û‡∏¥‡πà‡∏° hover event listener

        // ‡∏•‡∏ö‡∏Ñ‡∏•‡∏≤‡∏™ falling ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà animation ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô
        setTimeout(() => {
            const items = document.querySelectorAll('.item');
            items.forEach(item => {
                item.classList.remove('falling');
            });
        }, 1000); // ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Ç‡∏≠‡∏á animation
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏≤‡∏°‡∏ï‡∏±‡∏ß
    function ensureNoThreeInARow(grid) {
        let isValid = false;

        while (!isValid) {
            isValid = true;
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            for (let i = 0; i < 8; i++) {
                for (let j = 0; j < 6; j++) {
                    if (grid[i][j].dataset.emoji === grid[i][j + 1].dataset.emoji && 
                        grid[i][j].dataset.emoji === grid[i][j + 2].dataset.emoji) {
                        isValid = false;
                        // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡∏ï‡∏±‡∏ß‡πÉ‡∏î‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏∂‡πà‡∏á
                        grid[i][j + 2].dataset.emoji = getRandomEmoji();
                    }
                }
            }
            
            for (let j = 0; j < 8; j++) {
                for (let i = 0; i < 6; i++) {
                    if (grid[i][j].dataset.emoji === grid[i + 1][j].dataset.emoji && 
                        grid[i][j].dataset.emoji === grid[i + 2][j].dataset.emoji) {
                        isValid = false;
                        // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡∏ï‡∏±‡∏ß‡πÉ‡∏î‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏∂‡πà‡∏á
                        grid[i + 2][j].dataset.emoji = getRandomEmoji();
                    }
                }
            }
        }
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏°‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥
    function getRandomEmoji() {
        return emojis[Math.floor(Math.random() * emojis.length)];
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏∏‡πà‡∏° shuffle ‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥
    function shuffleItems() {
        const items = Array.from(container.children);
        for (let i = items.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            container.appendChild(items[j]);
        }
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏ô
    function stopShaking() {
        const items = document.querySelectorAll('.item');
        items.forEach(item => {
            item.classList.remove('shaking');
        });
        selectedItem = null;
        selectedEmoji = null;
        clickedItem = null;
        clickedEmoji = null;
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ animation ‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏•‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
    function animateSwap(item1, item2) {
        item1.classList.add('swap');
        item2.classList.add('swap');
        
        // ‡∏•‡∏ö‡∏Ñ‡∏•‡∏≤‡∏™ animation ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà animation ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô
        setTimeout(() => {
            item1.classList.remove('swap');
            item2.classList.remove('swap');
        }, 500); // ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Ç‡∏≠‡∏á animation
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Ñ‡∏•‡∏¥‡∏Å
    function handleClick(event) {
        if (isAnimating) return; // ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡∏≠‡∏¢‡∏π‡πà

        const clicked = event.currentTarget;

        if (!selectedItem) {
            // ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÅ‡∏£‡∏Å, ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥
            selectedItem = clicked;
            selectedEmoji = selectedItem.dataset.emoji;
            selectedItem.classList.add('shaking');
        } else {
            // ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á, ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏¥‡∏î‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            clickedItem = clicked;
            clickedEmoji = clickedItem.dataset.emoji;

            const row1 = parseInt(selectedItem.dataset.row, 10);
            const col1 = parseInt(selectedItem.dataset.col, 10);
            const row2 = parseInt(clickedItem.dataset.row, 10);
            const col2 = parseInt(clickedItem.dataset.col, 10);
            
            const isAdjacent = (
                (row1 === row2 && Math.abs(col1 - col2) === 1) ||  // ‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô
                (col1 === col2 && Math.abs(row1 - row2) === 1)    // ‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á
            );

            if (isAdjacent) {
                // ‡∏™‡∏•‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß
                selectedItem.dataset.emoji = clickedEmoji;
                clickedItem.dataset.emoji = selectedEmoji;

                // ‡πÅ‡∏™‡∏î‡∏á animation ‡∏Å‡∏≤‡∏£‡∏™‡∏•‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
                animateSwap(selectedItem, clickedItem);

                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏™‡∏•‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
                setTimeout(() => {
                    if (checkForMatches()) {
                        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏≤‡∏°‡∏ï‡∏±‡∏ß ‡∏•‡∏ö‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô
                        isAnimating = true;
                        setTimeout(() => {
                            dropDownItems();
                            isAnimating = false;
                        }, 500); // ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Ç‡∏≠‡∏á animation ‡∏Å‡∏≤‡∏£‡∏•‡∏ö
                    } else {
                        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏≤‡∏°‡∏ï‡∏±‡∏ß ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏¥‡∏°
                        const tempEmoji = selectedItem.dataset.emoji;
                        selectedItem.dataset.emoji = clickedItem.dataset.emoji;
                        clickedItem.dataset.emoji = tempEmoji;
                    }
                }, 500); // ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Ç‡∏≠‡∏á animation ‡∏Å‡∏≤‡∏£‡∏™‡∏•‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
            }

            // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
            stopShaking();
        }
    }

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞ item
    function addEventListenersToItems() {
        const items = document.querySelectorAll('.item');
        items.forEach(item => {
            item.addEventListener('click', handleClick);
        });
    }

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener hover ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞ item
    function addHoverListenersToItems() {
        const items = document.querySelectorAll('.item');
        items.forEach(item => {
            item.addEventListener('mouseenter', () => {
                if (!selectedItem) {
                    item.classList.add('shaking');
                }
            });
            item.addEventListener('mouseleave', () => {
                if (!selectedItem) {
                    item.classList.remove('shaking');
                }
            });
        });
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ô‡∏≠‡∏Å‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà item ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏ô
    document.addEventListener('click', (event) => {
        if (!event.target.closest('.item')) {
            stopShaking();
        }
    });

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏•‡∏ö‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ
    function checkForMatches() {
        const items = document.querySelectorAll('.item');
        let matches = [];
        let hasMatch = false;

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô
        for (let i = 0; i < 8; i++) {
            for (let j = 0; j < 6; j++) {
                const item1 = items[i * 8 + j];
                const item2 = items[i * 8 + j + 1];
                const item3 = items[i * 8 + j + 2];
                if (item1.dataset.emoji === item2.dataset.emoji &&
                    item1.dataset.emoji === item3.dataset.emoji) {
                    matches.push(item1, item2, item3);
                    hasMatch = true;
                }
            }
        }

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á
        for (let j = 0; j < 8; j++) {
            for (let i = 0; i < 6; i++) {
                const item1 = items[i * 8 + j];
                const item2 = items[(i + 1) * 8 + j];
                const item3 = items[(i + 2) * 8 + j];
                if (item1.dataset.emoji === item2.dataset.emoji &&
                    item1.dataset.emoji === item3.dataset.emoji) {
                    matches.push(item1, item2, item3);
                    hasMatch = true;
                }
            }
        }

        // ‡∏•‡∏ö item ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ
        if (matches.length > 0) {
            matches.forEach(item => {
                item.dataset.emoji = '';
                item.classList.add('removed');
            });
        }

        return hasMatch;
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡∏•‡∏á‡∏°‡∏≤‡πÄ‡∏ï‡∏¥‡∏°‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏•‡∏ö
    function dropDownItems() {
        const items = document.querySelectorAll('.item');
        for (let j = 0; j < 8; j++) {
            let emptySpots = 0;
            for (let i = 7; i >= 0; i--) {
                const item = items[i * 8 + j];
                if (item.dataset.emoji === '') {
                    emptySpots++;
                } else if (emptySpots > 0) {
                    const targetItem = items[(i + emptySpots) * 8 + j];
                    targetItem.dataset.emoji = item.dataset.emoji;
                    item.dataset.emoji = '';
                }
            }
            // ‡πÄ‡∏ï‡∏¥‡∏°‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
            for (let k = 0; k < emptySpots; k++) {
                const newItem = items[k * 8 + j];
                newItem.dataset.emoji = getRandomEmoji();
            }
        }

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏Å‡∏±‡∏ô‡∏™‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏ï‡πá‡∏°
        setTimeout(() => {
            if (checkForMatches()) {
                setTimeout(() => {
                    dropDownItems();
                }, 500); // ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Ç‡∏≠‡∏á animation ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏•‡∏á
            }
        }, 500); // ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏Ç‡∏≠‡∏á animation ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏•‡∏á
    }

    // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô
    initializeGrid();

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° shuffle
    button.addEventListener('click', () => {
        shuffleItems();
    });
});
